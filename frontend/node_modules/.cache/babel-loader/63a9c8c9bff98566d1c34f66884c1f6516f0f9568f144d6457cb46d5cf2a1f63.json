{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson\\\\Desktop\\\\react\\\\documents-repository\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ListaArquivosPaciente from \"../components/ListaArquivosPaciente\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [pacientes, setPacientes] = useState([]);\n  const [pacienteSelecionado, setPacienteSelecionado] = useState(null);\n  const [erro, setErro] = useState(\"\");\n  useEffect(() => {\n    async function fetchPacientes() {\n      try {\n        const response = await axios.get(\"http://localhost:3333/api/pacientes\");\n        setPacientes(response.data);\n      } catch (error) {\n        console.error(error);\n        setErro(\"Erro ao buscar pacientes.\");\n      }\n    }\n    fetchPacientes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 800,\n      margin: \"2rem auto\",\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard de Pacientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), erro && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: erro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        padding: 0\n      },\n      children: pacientes.map(paciente => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          border: \"1px solid #ccc\",\n          padding: \"1rem\",\n          marginBottom: \"1rem\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\",\n          backgroundColor: (pacienteSelecionado === null || pacienteSelecionado === void 0 ? void 0 : pacienteSelecionado.id) === paciente.id ? \"#f0f8ff\" : \"#fff\"\n        },\n        onClick: () => setPacienteSelecionado(paciente),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: paciente.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: paciente.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, paciente.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), pacienteSelecionado && /*#__PURE__*/_jsxDEV(ListaArquivosPaciente, {\n      pacienteId: pacienteSelecionado.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"LbMxbbVTj9KfE5hKsOefsn8Ggko=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","axios","ListaArquivosPaciente","jsxDEV","_jsxDEV","Dashboard","_s","pacientes","setPacientes","pacienteSelecionado","setPacienteSelecionado","erro","setErro","fetchPacientes","response","get","data","error","console","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","listStyle","map","paciente","border","marginBottom","borderRadius","cursor","backgroundColor","id","onClick","nome","email","pacienteId","_c","$RefreshReg$"],"sources":["C:/Users/Anderson/Desktop/react/documents-repository/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ListaArquivosPaciente from \"../components/ListaArquivosPaciente\";\r\n\r\ntype Paciente = {\r\n  id: number;\r\n  nome: string;\r\n  email: string;\r\n};\r\n\r\nexport default function Dashboard() {\r\n  const [pacientes, setPacientes] = useState<Paciente[]>([]);\r\n  const [pacienteSelecionado, setPacienteSelecionado] =\r\n    useState<Paciente | null>(null);\r\n  const [erro, setErro] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchPacientes() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3333/api/pacientes\");\r\n        setPacientes(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setErro(\"Erro ao buscar pacientes.\");\r\n      }\r\n    }\r\n\r\n    fetchPacientes();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ maxWidth: 800, margin: \"2rem auto\", padding: \"1rem\" }}>\r\n      <h2>Dashboard de Pacientes</h2>\r\n\r\n      {erro && <p style={{ color: \"red\" }}>{erro}</p>}\r\n\r\n      <ul style={{ listStyle: \"none\", padding: 0 }}>\r\n        {pacientes.map((paciente) => (\r\n          <li\r\n            key={paciente.id}\r\n            style={{\r\n              border: \"1px solid #ccc\",\r\n              padding: \"1rem\",\r\n              marginBottom: \"1rem\",\r\n              borderRadius: \"5px\",\r\n              cursor: \"pointer\",\r\n              backgroundColor:\r\n                pacienteSelecionado?.id === paciente.id ? \"#f0f8ff\" : \"#fff\",\r\n            }}\r\n            onClick={() => setPacienteSelecionado(paciente)}\r\n          >\r\n            <strong>{paciente.nome}</strong>\r\n            <br />\r\n            <small>{paciente.email}</small>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {pacienteSelecionado && (\r\n        <ListaArquivosPaciente pacienteId={pacienteSelecionado.id} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}