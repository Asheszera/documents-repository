{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson\\\\Desktop\\\\react\\\\documents-repository\\\\frontend\\\\src\\\\components\\\\FormularioPaciente.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { z } from \"zod\";\n\n// 游꿢 Schema com Zod\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = z.object({\n  nome: z.string().min(2, \"Nome obrigat칩rio\"),\n  email: z.string().email(\"E-mail inv치lido\")\n});\nexport default function FormularioPaciente() {\n  _s();\n  const [arquivos, setArquivos] = useState(null);\n  const [sucesso, setSucesso] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: zodResolver(schema)\n  });\n  const onSubmit = async data => {\n    if (!arquivos || arquivos.length === 0) {\n      alert(\"Selecione pelo menos um arquivo\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"nome\", data.nome);\n    formData.append(\"email\", data.email);\n    Array.from(arquivos).forEach(file => formData.append(\"arquivos\", file));\n    try {\n      await axios.post(\"http://localhost:3333/api/pacientes\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setSucesso(true);\n    } catch (error) {\n      console.error(error);\n      setSucesso(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    encType: \"multipart/form-data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cadastro de Paciente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Nome\",\n      ...register(\"nome\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errors.nome && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.nome.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      type: \"email\",\n      ...register(\"email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: e => setArquivos(e.target.files)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), sucesso === true && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"Cadastro realizado com sucesso!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), sucesso === false && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Erro ao enviar dados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(FormularioPaciente, \"LuCupUhrjtL3Aiqclhha3u7sXFk=\", false, function () {\n  return [useForm];\n});\n_c = FormularioPaciente;\nvar _c;\n$RefreshReg$(_c, \"FormularioPaciente\");","map":{"version":3,"names":["useForm","zodResolver","useState","axios","z","jsxDEV","_jsxDEV","schema","object","nome","string","min","email","FormularioPaciente","_s","arquivos","setArquivos","sucesso","setSucesso","register","handleSubmit","formState","errors","resolver","onSubmit","data","length","alert","formData","FormData","append","Array","from","forEach","file","post","headers","error","console","encType","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","message","type","multiple","onChange","e","target","files","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Anderson/Desktop/react/documents-repository/frontend/src/components/FormularioPaciente.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { z } from \"zod\";\r\n\r\n// 游꿢 Schema com Zod\r\nconst schema = z.object({\r\n  nome: z.string().min(2, \"Nome obrigat칩rio\"),\r\n  email: z.string().email(\"E-mail inv치lido\"),\r\n});\r\n\r\ntype FormData = z.infer<typeof schema>;\r\n\r\nexport default function FormularioPaciente() {\r\n  const [arquivos, setArquivos] = useState<FileList | null>(null);\r\n  const [sucesso, setSucesso] = useState<boolean | null>(null);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormData>({ resolver: zodResolver(schema) });\r\n\r\n  const onSubmit = async (data: FormData) => {\r\n    if (!arquivos || arquivos.length === 0) {\r\n      alert(\"Selecione pelo menos um arquivo\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"nome\", data.nome);\r\n    formData.append(\"email\", data.email);\r\n    Array.from(arquivos).forEach((file) => formData.append(\"arquivos\", file));\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:3333/api/pacientes\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      setSucesso(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setSucesso(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} encType=\"multipart/form-data\">\r\n      <h2>Cadastro de Paciente</h2>\r\n\r\n      <input placeholder=\"Nome\" {...register(\"nome\")} />\r\n      {errors.nome && <p>{errors.nome.message}</p>}\r\n\r\n      <input placeholder=\"Email\" type=\"email\" {...register(\"email\")} />\r\n      {errors.email && <p>{errors.email.message}</p>}\r\n\r\n      <input\r\n        type=\"file\"\r\n        multiple\r\n        onChange={(e) => setArquivos(e.target.files)}\r\n      />\r\n\r\n      <button type=\"submit\">Enviar</button>\r\n\r\n      {sucesso === true && (\r\n        <p style={{ color: \"green\" }}>Cadastro realizado com sucesso!</p>\r\n      )}\r\n      {sucesso === false && (\r\n        <p style={{ color: \"red\" }}>Erro ao enviar dados.</p>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,CAAC,QAAQ,KAAK;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGH,CAAC,CAACI,MAAM,CAAC;EACtBC,IAAI,EAAEL,CAAC,CAACM,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,kBAAkB,CAAC;EAC3CC,KAAK,EAAER,CAAC,CAACM,MAAM,CAAC,CAAC,CAACE,KAAK,CAAC,iBAAiB;AAC3C,CAAC,CAAC;AAIF,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAkB,IAAI,CAAC;EAC/D,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAiB,IAAI,CAAC;EAE5D,MAAM;IACJiB,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGtB,OAAO,CAAW;IAAEuB,QAAQ,EAAEtB,WAAW,CAACM,MAAM;EAAE,CAAC,CAAC;EAExD,MAAMiB,QAAQ,GAAG,MAAOC,IAAc,IAAK;IACzC,IAAI,CAACV,QAAQ,IAAIA,QAAQ,CAACW,MAAM,KAAK,CAAC,EAAE;MACtCC,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAChB,IAAI,CAAC;IAClCmB,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,IAAI,CAACb,KAAK,CAAC;IACpCmB,KAAK,CAACC,IAAI,CAACjB,QAAQ,CAAC,CAACkB,OAAO,CAAEC,IAAI,IAAKN,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEI,IAAI,CAAC,CAAC;IAEzE,IAAI;MACF,MAAM/B,KAAK,CAACgC,IAAI,CAAC,qCAAqC,EAAEP,QAAQ,EAAE;QAChEQ,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACFlB,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBnB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAMkB,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;IAACe,OAAO,EAAC,qBAAqB;IAAAC,QAAA,gBACnElC,OAAA;MAAAkC,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7BtC,OAAA;MAAOuC,WAAW,EAAC,MAAM;MAAA,GAAK1B,QAAQ,CAAC,MAAM;IAAC;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjDtB,MAAM,CAACb,IAAI,iBAAIH,OAAA;MAAAkC,QAAA,EAAIlB,MAAM,CAACb,IAAI,CAACqC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5CtC,OAAA;MAAOuC,WAAW,EAAC,OAAO;MAACE,IAAI,EAAC,OAAO;MAAA,GAAK5B,QAAQ,CAAC,OAAO;IAAC;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAChEtB,MAAM,CAACV,KAAK,iBAAIN,OAAA;MAAAkC,QAAA,EAAIlB,MAAM,CAACV,KAAK,CAACkC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9CtC,OAAA;MACEyC,IAAI,EAAC,MAAM;MACXC,QAAQ;MACRC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAEFtC,OAAA;MAAQyC,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEpC3B,OAAO,KAAK,IAAI,iBACfX,OAAA;MAAG+C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAd,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjE,EACA3B,OAAO,KAAK,KAAK,iBAChBX,OAAA;MAAG+C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAd,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEX;AAAC9B,EAAA,CA1DuBD,kBAAkB;EAAA,QAQpCb,OAAO;AAAA;AAAAuD,EAAA,GARW1C,kBAAkB;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}