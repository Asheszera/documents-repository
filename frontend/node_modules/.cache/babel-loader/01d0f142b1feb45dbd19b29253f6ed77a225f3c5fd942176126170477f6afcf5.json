{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anderson\\\\Desktop\\\\react\\\\documents-repository\\\\frontend\\\\src\\\\components\\\\FormularioLogin.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useState } from \"react\";\n\n// üõ°Ô∏è Schema de valida√ß√£o com Zod\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginSchema = z.object({\n  email: z.string().email(\"E-mail inv√°lido\"),\n  senha: z.string().min(6, \"M√≠nimo de 6 caracteres\")\n});\nexport default function FormularioLogin() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: zodResolver(loginSchema)\n  });\n  const [mensagem, setMensagem] = useState(\"\");\n  const onSubmit = async data => {\n    try {\n      // Aqui voc√™ faria a requisi√ß√£o de login ‚Äî essa √© uma simula√ß√£o\n      console.log(\"Login:\", data);\n      setMensagem(\"‚úÖ Login realizado com sucesso!\");\n    } catch (err) {\n      console.error(err);\n      setMensagem(\"‚ùå Erro ao fazer login.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"1rem\",\n      maxWidth: \"400px\",\n      margin: \"0 auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email\",\n      ...register(\"email\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errors.email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Senha\",\n      ...register(\"senha\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), errors.senha && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: errors.senha.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Entrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(FormularioLogin, \"3xzQUN9x2RdK4LYfxM13ym66VBA=\", false, function () {\n  return [useForm];\n});\n_c = FormularioLogin;\nvar _c;\n$RefreshReg$(_c, \"FormularioLogin\");","map":{"version":3,"names":["useForm","z","zodResolver","useState","jsxDEV","_jsxDEV","loginSchema","object","email","string","senha","min","FormularioLogin","_s","register","handleSubmit","formState","errors","resolver","mensagem","setMensagem","onSubmit","data","console","log","err","error","style","display","flexDirection","gap","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","color","message","type","_c","$RefreshReg$"],"sources":["C:/Users/Anderson/Desktop/react/documents-repository/frontend/src/components/FormularioLogin.tsx"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { z } from \"zod\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useState } from \"react\";\r\n\r\n// üõ°Ô∏è Schema de valida√ß√£o com Zod\r\nconst loginSchema = z.object({\r\n  email: z.string().email(\"E-mail inv√°lido\"),\r\n  senha: z.string().min(6, \"M√≠nimo de 6 caracteres\"),\r\n});\r\n\r\ntype LoginData = z.infer<typeof loginSchema>;\r\n\r\nexport default function FormularioLogin() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<LoginData>({\r\n    resolver: zodResolver(loginSchema),\r\n  });\r\n\r\n  const [mensagem, setMensagem] = useState(\"\");\r\n\r\n  const onSubmit = async (data: LoginData) => {\r\n    try {\r\n      // Aqui voc√™ faria a requisi√ß√£o de login ‚Äî essa √© uma simula√ß√£o\r\n      console.log(\"Login:\", data);\r\n      setMensagem(\"‚úÖ Login realizado com sucesso!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMensagem(\"‚ùå Erro ao fazer login.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit(onSubmit)}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"1rem\",\r\n        maxWidth: \"400px\",\r\n        margin: \"0 auto\",\r\n      }}\r\n    >\r\n      <h2>Login</h2>\r\n\r\n      <input placeholder=\"Email\" {...register(\"email\")} />\r\n      {errors.email && <p style={{ color: \"red\" }}>{errors.email.message}</p>}\r\n\r\n      <input type=\"password\" placeholder=\"Senha\" {...register(\"senha\")} />\r\n      {errors.senha && <p style={{ color: \"red\" }}>{errors.senha.message}</p>}\r\n\r\n      <button type=\"submit\">Entrar</button>\r\n\r\n      {mensagem && <p>{mensagem}</p>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}